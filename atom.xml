<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>91前端网 - 每多学一点知识，就少写一行代码</title>
  
  <subtitle>从未如此简单有趣</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2017-09-15T08:43:07.973Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>shenliyang</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>站在人工智能风口的Python程序员</title>
    <link href="http://yoursite.com/2017/cj7ln08hn00044b1gc01acxi9.html"/>
    <id>http://yoursite.com/2017/cj7ln08hn00044b1gc01acxi9.html</id>
    <published>2017-08-25T08:12:19.000Z</published>
    <updated>2017-09-15T08:43:07.973Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>2017年短短不到三个月的时间，国内AI获投项目已有36个，千万级别融资占据半数以上。</p></blockquote><p>嗯，就是那么霸道。两会刚刚结束，“人工智能”首次被列入政府工作报告，随之而来的是人工智能板块领跑大盘涨势，无疑，这一切将刺激人工智能在多个领域的全面发展。</p><p>大量融资的风口企业，绝对会把钱拿到招揽人才。而现在最流行的人工智能技术栈就是 TensorFlow 和 PyTorch，使用它们就是一份 Python 编程开发工作。一时间，python程序员成了人才市场的“抢手货”，工资待遇也水涨船高了。口说无凭，我们去工作搜索引擎jobui.com找看。一看吓一跳，首先是待遇啊：</p><p><img src="http://img.blog.csdn.net/20170318173404277?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvZ3psYWl5b25naGFv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="images"></p><p>最高待遇不过万不出奇啊！这还只是广州的情况，估计在北上深三个城市里，两者的差距还要大得多。除了待遇，跑到风口行业写Python，分分钟就是人工智能科学家的光环上身啊，估计大家都要跑得比西方记者还快了。</p><p>乐了Python程序员，苦的就是公司是Python技术栈的传统IT业务的企业了。就别提一般的小企业，连豆瓣、知乎这样的都大受冲击了。豆瓣的洪强宁，也跑去创业做人工智能相关的应用了……</p><p>没有人能够对抗趋势，风口企业这么有钱，能做的就只能是避开它们的锋芒。我觉得Python技术栈的企业应该考虑新的技术选型了。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;2017年短短不到三个月的时间，国内AI获投项目已有36个，千万级别融资占据半数以上。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;嗯，就是那么霸道。两会刚刚结束，“人工智能”首次被列入政府工作报告，随之而来的是人工智能板块领跑大盘涨势，无疑，这一切
      
    
    </summary>
    
      <category term="后端" scheme="http://yoursite.com/categories/%E5%90%8E%E7%AB%AF/"/>
    
    
      <category term="python" scheme="http://yoursite.com/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>永久免费翻樯大杀器(不限速)</title>
    <link href="http://yoursite.com/2017/cj7ln08hh00014b1g3koxpedk.html"/>
    <id>http://yoursite.com/2017/cj7ln08hh00014b1g3koxpedk.html</id>
    <published>2017-08-24T08:12:19.000Z</published>
    <updated>2017-09-15T08:43:07.973Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>网上免费翻墙的网站、软件、账号越来越少了，不是要天天签到就是不定时更换帐号密码，速度不理想，也不稳定。今天推荐GFW.Press。需要翻墙注册，无翻墙软件的可下载Lantern，用法不多说，自己动手丰衣足食。</p></blockquote><h3 id="现在已经大家都能够翻樯了-接下来就要使用免费服务了"><a href="#现在已经大家都能够翻樯了-接下来就要使用免费服务了" class="headerlink" title="现在已经大家都能够翻樯了.接下来就要使用免费服务了:"></a>现在已经大家都能够翻樯了.接下来就要使用免费服务了:</h3><p>1.登录gfw.press官网<strong>(这里需要翻樯)</strong></p><p>2.点击注册</p><p>3.注册成功后点击登录,你将会看到节点信息</p><p><img src="http://dn-cnode.qbox.me/FjRR4JHK1lc6SzxNtnAc8HmumyOH" alt="image"></p><p>4.下载gfw.press软件</p><p>5.安装完毕后双击打开,并安装gfw.press官网中提供的账号填入节点,端口以及密码.</p><p>6.打开谷歌浏览器,搜索chrome网上应用店,打开并搜索插件switchomega,安装插件   (这里需要翻樯)</p><p><img src="http://dn-cnode.qbox.me/FjJmrA7AVIocymjZN_-SN2RgrPih" alt="image"></p><p>7.下载完毕后,你的谷歌浏览器右上角将多出一个小图标.单击选项按钮进入管理界面.<br><img src="http://n//dn-cnode.qbox.me/FvkjspPx9UswCmRl07ZUkxnqSJ8q" alt="image"></p><p>8.进入管理界面后,进行如下配置</p><ul><li>新建情景模式</li></ul><p><img src="http://dn-cnode.qbox.me/FkRw9vxJhAECricmXA4xbjG318x6" alt="image"></p><ul><li>填入路由信息</li></ul><p><img src="http://dn-cnode.qbox.me/FqqxP52d_OWXfxc2BZMuHViObcsm" alt="image"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;网上免费翻墙的网站、软件、账号越来越少了，不是要天天签到就是不定时更换帐号密码，速度不理想，也不稳定。今天推荐GFW.Press。需要翻墙注册，无翻墙软件的可下载Lantern，用法不多说，自己动手丰衣足食。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;
      
    
    </summary>
    
      <category term="工具" scheme="http://yoursite.com/categories/%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="gfw" scheme="http://yoursite.com/tags/gfw/"/>
    
  </entry>
  
  <entry>
    <title>JavaScript代码检查工具对比</title>
    <link href="http://yoursite.com/2017/cj7ln08ha00004b1g38dm99kd.html"/>
    <id>http://yoursite.com/2017/cj7ln08ha00004b1g38dm99kd.html</id>
    <published>2017-04-03T07:51:30.000Z</published>
    <updated>2017-09-15T08:43:07.973Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://timgsa.baidu.com/timg?image&amp;quality=80&amp;size=b9999_10000&amp;sec=1503571860528&amp;di=0fecd1d75a0d57851a782f0da053a047&amp;imgtype=jpg&amp;src=http%3A%2F%2Fimg0.imgtn.bdimg.com%2Fit%2Fu%3D3845209004%2C4113255300%26fm%3D214%26gp%3D0.jpg" alt="image"></p><p>JavaScript代码校验工具能够让你在写代码时避免一些低级的错误。尽管我有很多年的开发经验，我仍然会犯一些语法错误并且忘记处理我的错误。一个好的校验工具或者格式化工具，可以让我避免这些错误，以免浪费我的时间。一个好的校验工具还能确保一个项目保持一个固定的代码风格。</p><p>有很多关于JavaScript的校验工具，你怎样选择其中的某一个呢？让我们一起来看看它们有什么样的特性以及优缺点。接下来我要介绍四种常用的选择：JSLint，JSHint，JSCS和ESLint。</p><h2 id="Overview"><a href="#Overview" class="headerlink" title="Overview"></a>Overview</h2><p>这四个工具的基本用法都是类似的，它们定义了一套规则用来解析和报告js文件里面的问题。它们都可以通过npm来进行安装。可以通过命令行来调用它们，给命令行传递文件参数，也可以作为grunt这一类工具的插件被使用，或者可以集成到编辑器中。它们都支持使用注释作为配置。</p><p>以上就是它们所有的相似之处了，每一个工具都有优缺点，只是有些工具相比于其它工具更加有优势。</p><h2 id="JSLint"><a href="#JSLint" class="headerlink" title="JSLint"></a>JSLint</h2><p>JSLint是这四种校验工具中最为古老的。Douglas Crockford（译注:《JavaScript 语言精粹》的作者）在2002年创造了它，它是强制使用的，为了保留它所认为的JavaScript这门语言的精华部分。如果你认同他的观点，对你而言，JSLint将会是一个好的工具。安装完成马上即可使用。</p><p>JSLint的缺点是它是不可以进行配置和扩展的。你不能禁用它的某些特性，并且缺乏文档。它的官网并没有什么用处，例如，它缺少如果将这个工具整合到你的编辑器的任何信息。</p><h3 id="优点："><a href="#优点：" class="headerlink" title="优点："></a>优点：</h3><ul><li>配置规则都已经定好了，安装即可使用（如果你同意这些强制的规则的话）</li></ul><h3 id="缺点："><a href="#缺点：" class="headerlink" title="缺点："></a>缺点：</h3><ul><li>JSLint没有可配置文件，你无法对它的规则进行更改</li><li>配置规则的数量有限，有些规则无法禁用</li><li>不支持自定义规则</li><li>缺少文档</li><li>很难定位到哪条规则导致了错误</li></ul><h2 id="JSCSC"><a href="#JSCSC" class="headerlink" title="JSCSC"></a>JSCSC</h2><p>JSCS和以上两个都是不同的，如果不给它一个配置文件或者使用一套预设的规则，它将什么也不做不了，不过你可以从别的网站下载配置文件，所以这并不是什么大问题，并且它有很多的预设规则，比如说jQuery的代码风格的预设规则以及Google的代码风格的预设规则。</p><p>它有超过90种不同的规则，并且你可以通过插件创造自定义规则。JSCS也支持自定义输出报告，这使得其更容易与需要其以特定格式输入的工具集成。</p><p>JSCS是一个代码风格检查器，这意味着它只捕获与代码格式相关的问题，而不包含潜在的错误。因此，它比其他工具的灵活性更低，但是如果您需要强制执行特定的编码风格，那么JSCS就可以做的很好。</p><h3 id="优点：-1"><a href="#优点：-1" class="headerlink" title="优点："></a>优点：</h3><ul><li>支持自定义输出报告，可以使其更容易和其它工具进行集成</li><li>如果您遵循现有的可用编码风格之一，预设和现成的配置文件可以轻松设置</li><li>在报告中，有一个标志包含在规则名之中，所以很容易找出是哪条规则导致了错误</li><li>可以利用自定义的插件进行拓展</li></ul><h3 id="缺点：-1"><a href="#缺点：-1" class="headerlink" title="缺点："></a>缺点：</h3><ul><li>只检测到代码风格的违规，不检测潜在的错误，比如说未使用的变量或者变量的全局污染等</li><li>四个工具中性能最差的，但是这并不是一个典型用途的问题</li></ul><h2 id="ESLint"><a href="#ESLint" class="headerlink" title="ESLint"></a>ESLint</h2><p>ESLint是这四个工具中最新的，它被设计为易于拓展的，具有大量的自定义规则，并且很容易通过插件的形式来安装。它输出简洁的报告，但是默认包含规则的名称，因此你始终知道是那条规则导致了错误的信息。</p><p>ESLint的文档多少有些混乱，规则的列表容易查找，并且按逻辑进行分类，但配置说明在某些地方有点混乱。然而，它提供了如何对编辑器进行集成，插件和示例的链接。</p><h3 id="优点：-2"><a href="#优点：-2" class="headerlink" title="优点："></a>优点：</h3><ul><li>灵活：任何规则都可以切换使用，并且有些规则有额外的配置可以使用</li><li>可拓展性好，并且有很多可用的插件</li><li>易于理解的输出报告</li><li>包含一些其它工具所没有的规则，使得ESLint更容易检测出代码中潜在的错误</li><li>对ES6的支持性最好，是唯一支持JSX的工具</li><li>支持自定义输出报告</li></ul><h3 id="缺点：-2"><a href="#缺点：-2" class="headerlink" title="缺点："></a>缺点：</h3><ul><li>需要一些配置</li><li>性能差，但这并不是主要的障碍</li></ul><h2 id="推荐"><a href="#推荐" class="headerlink" title="推荐"></a>推荐</h2><p>一个好的校验工具是捕捉问题非常重要的一步，但是它只能检测出它的规则许可范围之内的错误。对于更多简单明了的bug的捕捉，我建议使用单元测试，Code reviews也是也是不错的方式。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;https://timgsa.baidu.com/timg?image&amp;amp;quality=80&amp;amp;size=b9999_10000&amp;amp;sec=1503571860528&amp;amp;di=0fecd1d75a0d57851a782f0da0
      
    
    </summary>
    
      <category term="前端" scheme="http://yoursite.com/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="JavaScript" scheme="http://yoursite.com/tags/JavaScript/"/>
    
      <category term="jsLint" scheme="http://yoursite.com/tags/jsLint/"/>
    
  </entry>
  
</feed>
